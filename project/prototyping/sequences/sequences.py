#! /usr/bin/env python3

"""
The hypothesis here is that a few sequences should appear FAR more frequently
than others. Might want to tune sequence length as a parameter here.
"""
import time
from enum import IntEnum, IntFlag, auto

from bcc import BPF

class LSM(IntEnum):
    EMPTY = 0
    BPRM_CHECK_SECURITY = 1
    TASK_ALLOC = auto()
    TASK_FREE = auto()
    TASK_SETPGID = auto()
    TASK_GETPGID = auto()
    TASK_GETSID = auto()
    TASK_SETNICE = auto()
    TASK_SETIOPRIO = auto()
    TASK_GETIOPRIO = auto()
    TASK_PRLIMIT = auto()
    TASK_SETRLIMIT = auto()
    TASK_SETSCHEDULER = auto()
    TASK_GETSCHEDULER = auto()
    TASK_MOVEMEMORY = auto()
    TASK_KILL = auto()
    TASK_PRCTL = auto()
    SB_STATFS = auto()
    SB_MOUNT = auto()
    SB_REMOUNT = auto()
    SB_UMOUNT = auto()
    SB_PIVOTROOT = auto()
    MOVE_MOUNT = auto()
    INODE_CREATE = auto()
    INODE_LINK = auto()
    INODE_SYMLINK = auto()
    INODE_MKDIR = auto()
    INODE_RMDIR = auto()
    INODE_MKNOD = auto()
    INODE_RENAME = auto()
    INODE_READLINK = auto()
    INODE_FOLLOW_LINK = auto()
    INODE_PERMISSION = auto()
    INODE_SETATTR = auto()
    INODE_GETATTR = auto()
    INODE_SETXATTR = auto()
    INODE_GETXATTR = auto()
    INODE_LISTXATTR = auto()
    INODE_REMOVEXATTR = auto()
    FILE_PERMISSION = auto()
    FILE_IOCTL = auto()
    MMAP_ADDR = auto()
    MMAP_FILE = auto()
    FILE_MPROTECT = auto()
    FILE_LOCK = auto()
    FILE_FCNTL = auto()
    FILE_SEND_SIGIOTASK = auto()
    FILE_RECEIVE = auto()
    UNIX_STREAM_CONNECT = auto()
    UNIX_MAY_SEND = auto()
    SOCKET_CREATE = auto()
    SOCKET_SOCKETPAIR = auto()
    SOCKET_BIND = auto()
    SOCKET_CONNECT = auto()
    SOCKET_LISTEN = auto()
    SOCKET_ACCEPT = auto()
    SOCKET_SENDMSG = auto()
    SOCKET_RECVMSG = auto()
    SOCKET_GETSOCKNAME = auto()
    SOCKET_GETPEERNAME = auto()
    SOCKET_GETSOCKOPT = auto()
    SOCKET_SETSOCKOPT = auto()
    SOCKET_SHUTDOWN = auto()
    TUN_DEV_CREATE = auto()
    TUN_DEV_ATTACH = auto()
    KEY_ALLOC = auto()
    KEY_FREE = auto()
    KEY_PERMISSION = auto()
    IPC_PERMISSION = auto()
    MSG_QUEUE_ASSOCIATE = auto()
    MSG_QUEUE_MSGCTL = auto()
    MSG_QUEUE_MSGSND = auto()
    MSG_QUEUE_MSGRCV = auto()
    SHM_ASSOCIATE = auto()
    SHM_SHMCTL = auto()
    SHM_SHMAT = auto()
    PTRACE_ACCESS_CHECK = auto()
    PTRACE_TRACEME = auto()
    CAPGET = auto()
    CAPSET = auto()
    CAPABLE = auto()
    QUOTACTL = auto()
    QUOTA_ON = auto()
    SYSLOG = auto()
    SETTIME = auto()
    VM_ENOUGH_MEMORY = auto()
    BPF = auto()
    BPF_MAP = auto()
    BPF_PROG = auto()
    PERF_EVENT_OPEN = auto()
    MAX = auto()

def dump_sequences(bpf: BPF, top=20):
    for k, v in sorted(bpf['sequence_counts'].items(), key=lambda x: x[1].value, reverse=True)[:top]:
        print(f'{[LSM(x).name for x in k.value]}: {v.value}')
    print()

bpf = BPF(src_file='./sequences.c')

while 1:
    time.sleep(1)
    dump_sequences(bpf)
